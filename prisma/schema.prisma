generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DEV_CLUSTER")
}

model Premium {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  guild    String   @unique
  status   Boolean  @default(false)
  expireAt DateTime @default(now())
}

model Logging {
  id     String        @id @default(auto()) @map("_id") @db.ObjectId
  guild  String        @unique
  status Boolean       @default(false)
  events LoggingEvents
}

type LoggingEvents {
  status        Boolean @default(false)
  restriction   Boolean @default(true)
  warning       Boolean @default(true)
  kick          Boolean @default(true)
  ban           Boolean @default(true)
  createRole    Boolean @default(true)
  deleteRole    Boolean @default(true)
  updateMessage Boolean @default(true)
  deleteMessage Boolean @default(true)
}

model Welcome {
  id       String          @id @default(auto()) @map("_id") @db.ObjectId
  guild    String          @unique
  status   Boolean         @default(false)
  role     String?
  channel  String?
  webhook  String?
  messages WelcomeMessages
}

type WelcomeMessages {
  guild  WelcomeGuildMessages
  direct WelcomeDirectMessages
}

type WelcomeDirectMessages {
  status Boolean             @default(false)
  join   WelcomeMessageData?
}

type WelcomeGuildMessages {
  status Boolean            @default(false)
  join   WelcomeMessageData
  leave  WelcomeMessageData
}

type WelcomeMessageData {
  message String?
  embed   WelcomeMessageEmbedData
}

type WelcomeMessageEmbedData {
  url         String?
  color       String?
  title       String?
  author      String?
  footer      String?
  authorImage String?
  footerImage String?
  description String?
  thumbnail   String?
  image       String?
  fields      WelcomeMessageEmbedFieldData[]
  timestamp   Boolean                        @default(false)
}

type WelcomeMessageEmbedFieldData {
  id     Int
  name   String
  value  String
  inline Boolean @default(false)
}
