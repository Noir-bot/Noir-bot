generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DEV_CLUSTER")
}

model Premium {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  guild    String   @unique
  status   Boolean  @default(false)
  expireAt DateTime @default(now())
}

model Statistics {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  status       Boolean         @default(false)
  commandsUsed Int             @default(0)
  cases        StatisticsCases
}

type StatisticsCases {
  overall      Int @default(0)
  warnings     Int @default(0)
  restrictions Int @default(0)
  kicks        Int @default(0)
  bans         Int @default(0)
  softbans     Int @default(0)
  tempbans     Int @default(0)
}

model Moderation {
  id    String          @id @default(auto()) @map("_id") @db.ObjectId
  guild String          @unique
  logs  ModerationLogs
  rules ModerationRules
}

type ModerationLogs {
  status           Boolean @default(false)
  webhook          String?
  rawWebhookAvatar String?
}

type ModerationRules {
  status Boolean          @default(false)
  rules  ModerationRule[]
}

type ModerationRule {
  id       Int
  type     String
  quantity Int
  duration String?
}

model Welcome {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  guild            String          @unique
  status           Boolean         @default(false)
  restoreRoles     Boolean         @default(false)
  roles            String[]
  webhook          String?
  rawWebhookAvatar String?
  messages         WelcomeMessages
}

type WelcomeMessages {
  guild  WelcomeGuildMessages
  direct WelcomeDirectMessages
}

type WelcomeDirectMessages {
  status Boolean             @default(false)
  join   WelcomeMessageData?
}

type WelcomeGuildMessages {
  status Boolean            @default(false)
  join   WelcomeMessageData
  left   WelcomeMessageData
}

type WelcomeMessageData {
  message String?
  embed   WelcomeMessageEmbedData
}

type WelcomeMessageEmbedData {
  url            String?
  color          String?
  rawColor       String?
  title          String?
  author         String?
  footer         String?
  authorImage    String?
  rawAuthorImage String?
  footerImage    String?
  rawFooterImage String?
  description    String?
  thumbnail      String?
  rawThumbnail   String?
  image          String?
  rawImage       String?
  fields         WelcomeMessageEmbedFieldData[]
  timestamp      Boolean                        @default(false)
}

type WelcomeMessageEmbedFieldData {
  id     Int
  name   String
  value  String
  inline Boolean @default(false)
}
